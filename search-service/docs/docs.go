// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Health method check http server health",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check method",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.HealthResponse"
                        }
                    }
                }
            }
        },
        "/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Suggest method provide tickers models equal to /tickers response from Client Service by query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Searching"
                ],
                "summary": "Search method for tickers searching",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/searchservice.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/searchservice.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/suggest": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Suggest method provide tickers short info by query equal part of ticker id, company name, homepage url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Suggesting"
                ],
                "summary": "Suggest method for tickers suggesting",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/searchservice.SuggestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/searchservice.SuggestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "clientservice.Ticker": {
            "type": "object",
            "properties": {
                "fields": {
                    "$ref": "#/definitions/clientservice.TickerFields"
                },
                "media": {
                    "$ref": "#/definitions/clientservice.TickerMedia"
                }
            }
        },
        "clientservice.TickerFields": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "company_address": {
                    "type": "string"
                },
                "company_city": {
                    "type": "string"
                },
                "company_description": {
                    "type": "string"
                },
                "company_locale": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "company_state": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_name": {
                    "type": "string"
                },
                "homepage_url": {
                    "type": "string"
                },
                "ticker_id": {
                    "type": "string"
                },
                "total_employees": {
                    "type": "integer"
                }
            }
        },
        "clientservice.TickerMedia": {
            "type": "object",
            "properties": {
                "found": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "clientservice.WithFields": {
            "type": "object",
            "properties": {
                "media": {
                    "type": "boolean"
                }
            }
        },
        "common.HealthResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "errs.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "searchservice.Info": {
            "type": "object",
            "properties": {
                "company_description": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "homepage_url": {
                    "type": "string"
                },
                "ticker_id": {
                    "type": "string"
                }
            }
        },
        "searchservice.Part": {
            "type": "object",
            "properties": {
                "info": {
                    "$ref": "#/definitions/searchservice.Info"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "searchservice.SearchRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "with": {
                    "$ref": "#/definitions/clientservice.WithFields"
                }
            }
        },
        "searchservice.SearchResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientservice.Ticker"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "searchservice.SuggestRequest": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "searchservice.SuggestResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/searchservice.Part"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-Auth-Token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8084",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Search Service API",
	Description:      "API for searching service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
