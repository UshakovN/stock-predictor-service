// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Health method check http server health",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check method",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.HealthResponse"
                        }
                    }
                }
            }
        },
        "/predictions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Predictions method provide stocks price dynamic predictions for client tickers subscriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Predictions model method",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/clientservice.PredictsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/stocks": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Stocks method provide stocks models for client with pagination, filtration, sorting",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Stocks model method",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientservice.StocksRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/clientservice.StocksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/subscribe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Subscribe method create subscription model for client with specified ticker and store it",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Subscribe method subscribe client to the ticker",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientservice.SubscribeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/clientservice.SubscribeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Subscriptions method provide subscriptions models for client with filtration by active subscriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Subscriptions model method",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/clientservice.SubscriptionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/clientservice.SubscriptionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/tickers": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Tickers method provide tickers models for client with pagination, filtration, sorting and media fields",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "Tickers model method",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientservice.TickersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/clientservice.TickersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        },
        "/unsubscribe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Unsubscribe method deactivate subscription model for client on the ticker and update stored model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Unsubscribe method unsubscribe client from the ticker",
                "parameters": [
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientservice.UnsubscribeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/clientservice.UnsubscribeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errs.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "clientservice.BetweenFilter": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "left_border": {},
                "right_border": {}
            }
        },
        "clientservice.BorderFilter": {
            "type": "object",
            "properties": {
                "compare": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "clientservice.Filter": {
            "type": "object",
            "properties": {
                "between": {
                    "$ref": "#/definitions/clientservice.BetweenFilter"
                },
                "border": {
                    "$ref": "#/definitions/clientservice.BorderFilter"
                },
                "list": {
                    "$ref": "#/definitions/clientservice.ListFilter"
                }
            }
        },
        "clientservice.ListFilter": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "clientservice.ModelInfo": {
            "type": "object",
            "properties": {
                "accuracy": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                }
            }
        },
        "clientservice.Pagination": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "clientservice.Predict": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date_predict": {
                    "type": "string"
                },
                "predicted_movement": {
                    "type": "string"
                },
                "ticker_id": {
                    "type": "string"
                }
            }
        },
        "clientservice.PredictsResponse": {
            "type": "object",
            "properties": {
                "model_info": {
                    "$ref": "#/definitions/clientservice.ModelInfo"
                },
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientservice.Predict"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "clientservice.Sort": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            }
        },
        "clientservice.Stock": {
            "type": "object",
            "properties": {
                "close_price": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "highest_price": {
                    "type": "number"
                },
                "lowest_price": {
                    "type": "number"
                },
                "open_price": {
                    "type": "number"
                },
                "stocked_time": {
                    "type": "string"
                },
                "ticker_id": {
                    "type": "string"
                },
                "trading_volume": {
                    "type": "number"
                }
            }
        },
        "clientservice.StocksRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientservice.Filter"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/clientservice.Pagination"
                },
                "sort": {
                    "$ref": "#/definitions/clientservice.Sort"
                }
            }
        },
        "clientservice.StocksResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "stocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientservice.Stock"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "clientservice.SubscribeRequest": {
            "type": "object",
            "properties": {
                "ticker_id": {
                    "type": "string"
                }
            }
        },
        "clientservice.SubscribeResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "clientservice.Subscription": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "modified_at": {
                    "type": "string"
                },
                "ticker_id": {
                    "type": "string"
                }
            }
        },
        "clientservice.SubscriptionsRequest": {
            "type": "object",
            "properties": {
                "filter_active": {
                    "type": "boolean"
                }
            }
        },
        "clientservice.SubscriptionsResponse": {
            "type": "object",
            "properties": {
                "parts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientservice.Subscription"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "clientservice.Ticker": {
            "type": "object",
            "properties": {
                "fields": {
                    "$ref": "#/definitions/clientservice.TickerFields"
                },
                "media": {
                    "$ref": "#/definitions/clientservice.TickerMedia"
                }
            }
        },
        "clientservice.TickerFields": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "company_address": {
                    "type": "string"
                },
                "company_city": {
                    "type": "string"
                },
                "company_description": {
                    "type": "string"
                },
                "company_locale": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "company_state": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_name": {
                    "type": "string"
                },
                "homepage_url": {
                    "type": "string"
                },
                "ticker_id": {
                    "type": "string"
                },
                "total_employees": {
                    "type": "integer"
                }
            }
        },
        "clientservice.TickerMedia": {
            "type": "object",
            "properties": {
                "found": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "clientservice.TickersRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientservice.Filter"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/clientservice.Pagination"
                },
                "sort": {
                    "$ref": "#/definitions/clientservice.Sort"
                },
                "with": {
                    "$ref": "#/definitions/clientservice.WithFields"
                }
            }
        },
        "clientservice.TickersResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                },
                "tickers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientservice.Ticker"
                    }
                }
            }
        },
        "clientservice.UnsubscribeRequest": {
            "type": "object",
            "properties": {
                "ticker_id": {
                    "type": "string"
                }
            }
        },
        "clientservice.UnsubscribeResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "clientservice.WithFields": {
            "type": "object",
            "properties": {
                "media": {
                    "type": "boolean"
                }
            }
        },
        "common.HealthResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "errs.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-Auth-Token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Client Service API",
	Description:      "API for client resource service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
